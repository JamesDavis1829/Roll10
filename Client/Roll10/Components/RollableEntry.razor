@using Roll10.Services
@using Roll10.Domain.Interfaces
@using Roll10.Domain.Models
@using Roll10.Domain.Services

<li class="even:bg-slate-200">
    <div class="flex justify-between">
        <div class="w-9/12 p-2">
            <p class="font-bold">@Name</p>
            @if(!string.IsNullOrEmpty(Item.dice_roll))
            {
                <p class="italic">Roll: @DiceService.HumanReadableRollString(@Item)</p>
            }
            @if (!string.IsNullOrEmpty(Item.action_effect))
            {
                <p class="italic">Effect: @DiceService.HumanReadableEffectString(Character, Item)</p>
            }
            @ChildContent
        </div>
        <div class="relative w-8">
            @if(!HideDiceRoll)
            {
                <img alt="image of dice for rolls" src="images/dice.svg" class="h-8 w-8 absolute top-2 right-2 hover:cursor-pointer"
                    @onclick="() => RollDice(Item)" data-id="@Item.id"/>
            }
        </div>
    </div>
</li>

@code 
{
    [Parameter]
    public string Name { get; set; } = "";
    
    [Parameter]
    public RenderFragment? ChildContent { get;set; }
    
    [Parameter]
    public Character Character { get; set; }
    
    [Parameter]
    public IRollable Item { get; set; } = new Item();

    [Parameter]
    public Action<IRollable> RollDice { get; set; } = (arg) => { };
    
    [Parameter]
    public bool HideDiceRoll { get;set; } = false;

    //TODO: move somewhere else
    private string FormatOpValString(string opValString)
    {
        return string.Join(" ", opValString
            .Split(";")
            .Select(m =>
            {
                var parts = m.ToUpper().Split(" ");
                return string.Join(" ", parts);
            }));
    }
}