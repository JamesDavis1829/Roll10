@using Roll10.Services
@using Roll10.Models
@inject DiceService DiceService

<li class="even:bg-slate-200">
    <div class="flex justify-between">
        <div class="w-9/12 p-2">
            <p class="font-bold">@Name</p>
            @if(!string.IsNullOrEmpty(@Item.dice_roll))
            {
                <p class="italic">Roll: @DiceService.HumanReadableRollString(@Item)</p>
            }
            @if (!string.IsNullOrEmpty(Item.action_effect))
            {
                <p class="italic">Effect: @FormatOpValString(@Item.action_effect)</p>
            }
            @ChildContent
        </div>
        <div class="relative w-8">
            @if(!HideDiceRoll)
            {
                <img alt="image of dice for rolls" src="images/dice.svg" class="h-8 w-8 absolute top-2 right-2 hover:cursor-pointer"
                    @onclick="() => RollDice(Item)" />
            }
        </div>
    </div>
</li>

@code 
{
    [Parameter]
    public string Name { get; set; } = "";
    [Parameter]
    public RenderFragment? ChildContent { get;set; }

    [Parameter]
    public IRollable Item { get; set; } = new Item();

    [Parameter]
    public Func<IRollable, Task> RollDice { get; set; } = (arg) => Task.CompletedTask;
    [Parameter]
    public bool HideDiceRoll { get;set; } = false;

    //TODO: move somewhere else
    private string FormatOpValString(string opValString)
    {
        return string.Join(" ", opValString
                .Split(";")
                .Select(m => {
                    var parts = m.Split(" ");
                    if(parts.Count() > 2)
                    {
                        parts[2] = parts[2].ToUpper();
                    }
                    return string.Join(" ", parts);
                }));
    }
}