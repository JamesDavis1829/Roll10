@implements IDisposable
@using Roll10.Services
@using Roll10.Models
@using System.Reactive
@inject PocketbaseService Pb
@inject DiceLogService DiceLogService

<div class="h-3">@*spacer*@</div>
@if (!string.IsNullOrEmpty(CurrentUser?.email))
{
    <p class="text-center">@CurrentUser.email</p>
    <div class="text-center my-4">
        <btn class="btn bg-blue-500 hover:bg-blue-700 text-white hover:cursor-pointer" @onclick="LogOut">Log Out</btn>
    </div>
}
else
{
    <p class="text-center">You must log in to use settings.</p>
    <div class="text-center my-4">
        <a href="/login" class="btn bg-blue-500 hover:bg-blue-700 text-white hover:cursor-pointer">Log In</a>
    </div>
}

@code {
    User? CurrentUser { get; set; } = null;
    private List<IDisposable> _subs = new();

    protected override async Task OnInitializedAsync()
    {
        _subs.Add(Pb.UserSubject.Subscribe(user =>
        {
            CurrentUser = user;
        }));
        await Pb.GetUser();
        await base.OnInitializedAsync();
    }

    Task LogOut()
    {
        DiceLogService.ClearLog();
        return Pb.LogOut();
    }

    void IDisposable.Dispose()
    {
        foreach (var sub in _subs) sub.Dispose();
    }
}